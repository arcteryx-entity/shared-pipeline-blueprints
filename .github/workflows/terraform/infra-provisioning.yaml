name: Terraform Infrastructure Provisioning
on:
  push:
  workflow_dispatch:
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true
jobs:
  Validate:
    runs-on: ubuntu-latest
    container:
      image: freddieentity/terraform:latest
    if: # Unable to map conditional expression to GitHub Actions equivalent
#         ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.ref }} =~ /^feature\/*/ || ${{ github.ref }} =~ /^renovate\/*/ || !($VALIDATION_ENABLE == "false") || ${{ github.ref }}
    environment:
      name: "${{ matrix.TF_PREDEFINE_WORKSPACE }}"
    timeout-minutes: 60
    continue-on-error: true
    env:
      BLUEPRINT_REPO_PATH: "/"
      BLUEPRINT_DEFAULT_BRANCH: bugfix/validate-tag
      MINIMUM_SEVERITY: MEDIUM
      MINIMUM_FAILURE_SEVERITY: warning
      TF_CURRENT_SOURCE_DIR:
        "!reference":
        - ".config"
        - terraform-src
      VARIABLE_ROOT_FOLDER: environments
      TF_BACKEND_ASSUME_ROLE_ARN: arn:aws:iam::621074188511:role/AdminRole
      IGNORE_ASSUME_ROLE: 'false'
      WORKSPACE: "${{ matrix.TF_PREDEFINE_WORKSPACE }}"
    strategy:
      matrix:
        TF_PREDEFINE_WORKSPACE:
    steps:
    - uses: actions/checkout@v4.1.0
      with:
        fetch-depth: 20
        lfs: true
    - run:
        "!reference":
        - ".assume-role"
        - script
    - run: assume_role $ASSUME_ROLE_ARN $EXTERNAL_ID
    - run:
        "!reference":
        - ".before_script"
        - tfenv_script
    - run:
        "!reference":
        - ".before_script"
        - tfinit_script
    - run: |
        TF_FMT_CMD="terraform -chdir=$TF_CURRENT_SOURCE_DIR fmt -list=true -write=false -diff=true -check=true -recursive"
        echo $TF_FMT_CMD
        eval $TF_FMT_CMD
    - run: |
        TF_VALIDATE_CMD="terraform -chdir=$TF_CURRENT_SOURCE_DIR validate"
        echo $TF_VALIDATE_CMD
        eval $TF_VALIDATE_CMD
    - run: |
        TF_LINT_CMD="tflint --chdir=$TF_CURRENT_SOURCE_DIR --var-file=$TF_VARIABLE_FILE -f junit --minimum-failure-severity=${MINIMUM_FAILURE_SEVERITY} --no-color > tflint-${WORKSPACE}.xml"
        echo $TF_LINT_CMD
        eval $TF_LINT_CMD
    - run: tfsec $TF_CURRENT_SOURCE_DIR --var-file=$TF_VARIABLE_FILE --workspace $WORKSPACE --no-module-downloads --soft-fail --out=tfsec-report-${WORKSPACE}.json --format=json
    - run: echo "Tfsec Summary..."
    - run: jq -c '.["results"]' tfsec-report-${WORKSPACE}.json | jq -c '.[] | [.severity, .description, .location.filename]' | sort || true
    - run: echo "Scanning for ${MINIMUM_SEVERITY} severity..."
    - run: tfsec $TF_CURRENT_SOURCE_DIR --var-file=$TF_VARIABLE_FILE --workspace=$WORKSPACE --no-module-downloads --concise-output --minimum-severity CRITICAL
#     # 'artifacts.junit' was not transformed because there is no suitable equivalent in GitHub Actions
    - uses: actions/upload-artifact@v4.1.0
      if: always()
      with:
        name: "${{ github.job }}"
        retention-days: 1
        path: |-
          tfsec-report-${WORKSPACE}.json
          tflint-${WORKSPACE}.xml
  Plan:
    needs: Validate
    runs-on: ubuntu-latest
    container:
      image: freddieentity/terraform:latest
    if: # Unable to map conditional expression to GitHub Actions equivalent
#         ${{ github.ref }} == $CI_DEFAULT_BRANCH || ${{ github.ref }} =~ /^feature\/*/ || ${{ github.ref }} =~ /^renovate\/*/ || !($PLAN_ENABLE == "false") || ${{ github.ref }}
    environment:
      name: "${{ matrix.TF_PREDEFINE_WORKSPACE }}"
    timeout-minutes: 60
    continue-on-error: true
    env:
      BLUEPRINT_REPO_PATH: "/"
      BLUEPRINT_DEFAULT_BRANCH: bugfix/validate-tag
      MINIMUM_SEVERITY: MEDIUM
      MINIMUM_FAILURE_SEVERITY: warning
      TF_CURRENT_SOURCE_DIR:
        "!reference":
        - ".config"
        - terraform-src
      VARIABLE_ROOT_FOLDER: environments
      TF_BACKEND_ASSUME_ROLE_ARN: arn:aws:iam::621074188511:role/AdminRole
      IGNORE_ASSUME_ROLE: 'false'
      WORKSPACE: "${{ matrix.TF_PREDEFINE_WORKSPACE }}"
    strategy:
      matrix:
        TF_PREDEFINE_WORKSPACE:
    steps:
    - uses: actions/checkout@v4.1.0
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/download-artifact@v4.1.0
    - run:
        "!reference":
        - ".assume-role"
        - script
    - run: assume_role $ASSUME_ROLE_ARN $EXTERNAL_ID
    - run:
        "!reference":
        - ".before_script"
        - tfenv_script
    - run:
        "!reference":
        - ".before_script"
        - tfinit_script
    - run: |
        cd ${{ github.workspace }}/$TF_CURRENT_SOURCE_DIR
        TF_PLAN_CMD="terraform plan -var-file=$TF_VARIABLE_FILE -out tf-${WORKSPACE}.plan $ARGS_APPLY"
        echo $TF_PLAN_CMD
        eval $TF_PLAN_CMD
        cd ${{ github.workspace }}
    - uses: actions/upload-artifact@v4.1.0
      if: success()
      with:
        name: "${{ github.job }}"
        retention-days: 1
        path: "$TF_CURRENT_SOURCE_DIR/tf-${WORKSPACE}.plan"
  Apply:
    needs: Plan
    runs-on: ubuntu-latest
    container:
      image: freddieentity/terraform:latest
    if: github.event_name == 'workflow_dispatch'
    environment:
      name: "${{ matrix.TF_PREDEFINE_WORKSPACE }}"
    timeout-minutes: 60
    env:
      BLUEPRINT_REPO_PATH: "/"
      BLUEPRINT_DEFAULT_BRANCH: bugfix/validate-tag
      MINIMUM_SEVERITY: MEDIUM
      MINIMUM_FAILURE_SEVERITY: warning
      TF_CURRENT_SOURCE_DIR:
        "!reference":
        - ".config"
        - terraform-src
      VARIABLE_ROOT_FOLDER: environments
      TF_BACKEND_ASSUME_ROLE_ARN: arn:aws:iam::621074188511:role/AdminRole
      IGNORE_ASSUME_ROLE: 'false'
      WORKSPACE: "${{ matrix.TF_PREDEFINE_WORKSPACE }}"
    strategy:
      matrix:
        TF_PREDEFINE_WORKSPACE:
    steps:
    - uses: actions/checkout@v4.1.0
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/download-artifact@v4.1.0
    - run:
        "!reference":
        - ".assume-role"
        - script
    - run: assume_role $ASSUME_ROLE_ARN $EXTERNAL_ID
    - run:
        "!reference":
        - ".before_script"
        - tfenv_script
    - run:
        "!reference":
        - ".before_script"
        - tfinit_script
    - run: |
        TF_APPLY_CMD="terraform -chdir=$TF_CURRENT_SOURCE_DIR apply -auto-approve $ARGS_APPLY tf-${WORKSPACE}.plan"
        echo $TF_APPLY_CMD
        eval $TF_APPLY_CMD
    - uses: actions/upload-artifact@v4.1.0
      if: success()
      with:
        name: "${{ github.job }}"
        retention-days: 1
        path: "$TF_CURRENT_SOURCE_DIR/tf-${WORKSPACE}.plan"
  Destroy:
    needs: Plan
    runs-on: ubuntu-latest
    container:
      image: freddieentity/terraform:latest
    if: github.event_name == 'workflow_dispatch'
    environment:
      name: "${{ matrix.TF_PREDEFINE_WORKSPACE }}"
    timeout-minutes: 60
    env:
      BLUEPRINT_REPO_PATH: "/"
      BLUEPRINT_DEFAULT_BRANCH: bugfix/validate-tag
      MINIMUM_SEVERITY: MEDIUM
      MINIMUM_FAILURE_SEVERITY: warning
      TF_CURRENT_SOURCE_DIR:
        "!reference":
        - ".config"
        - terraform-src
      VARIABLE_ROOT_FOLDER: environments
      TF_BACKEND_ASSUME_ROLE_ARN: arn:aws:iam::621074188511:role/AdminRole
      IGNORE_ASSUME_ROLE: 'false'
      WORKSPACE: "${{ matrix.TF_PREDEFINE_WORKSPACE }}"
    strategy:
      matrix:
        TF_PREDEFINE_WORKSPACE:
    steps:
    - uses: actions/checkout@v4.1.0
      with:
        fetch-depth: 20
        lfs: true
    - uses: actions/download-artifact@v4.1.0
    - run:
        "!reference":
        - ".assume-role"
        - script
    - run: assume_role $ASSUME_ROLE_ARN $EXTERNAL_ID
    - run:
        "!reference":
        - ".before_script"
        - tfenv_script
    - run:
        "!reference":
        - ".before_script"
        - tfinit_script
    - run: |-
        cd ${{ github.workspace }}/$TF_CURRENT_SOURCE_DIR
        TF_DESTROY_CMD="terraform apply -auto-approve -destroy tf-${WORKSPACE}.plan"
        echo $TF_DESTROY_CMD
        eval $TF_DESTROY_CMD
        cd ${{ github.workspace }}
